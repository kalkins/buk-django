# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-04 20:46
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='e-post')),
                ('is_active', models.BooleanField(default=True, verbose_name='aktiv')),
                ('is_admin', models.BooleanField(default=False)),
                ('first_name', models.CharField(max_length=30, verbose_name='fornavn')),
                ('last_name', models.CharField(max_length=30, verbose_name='etternavn')),
                ('phone', models.CharField(max_length=20, verbose_name='mobilnummer')),
                ('birthday', models.DateField(help_text='Datoer skrives på formen YYYY-MM-DD', verbose_name='fødselsdato')),
                ('joined_date', models.DateField(default=datetime.date.today, help_text='Datoer skrives på formen YYYY-MM-DD', verbose_name='startet i BUK')),
                ('quit_date', models.DateField(blank=True, default=None, help_text='Datoer skrives på formen YYYY-MM-DD', null=True, verbose_name='sluttet i BUK')),
                ('address', models.CharField(max_length=60, verbose_name='adresse')),
                ('zip_code', models.CharField(max_length=4, verbose_name='postnr.')),
                ('city', models.CharField(max_length=40, verbose_name='poststed')),
                ('origin', models.CharField(blank=True, default='', max_length=50, verbose_name='kommer fra')),
                ('occupation', models.CharField(blank=True, default='', max_length=100, verbose_name='studie/yrke')),
                ('about_me', models.TextField(blank=True, default='', verbose_name='litt om meg selv')),
                ('musical_background', models.TextField(blank=True, default='', verbose_name='musikalsk bakgrunn')),
                ('has_car', models.BooleanField(default=False, verbose_name='har bil')),
                ('has_towbar', models.BooleanField(default=False, verbose_name='har hengerfeste')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'medlem',
                'verbose_name_plural': 'medlemmer',
            },
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='navn')),
                ('group_leader', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_leader_for', to=settings.AUTH_USER_MODEL, verbose_name='gruppeleder')),
            ],
            options={
                'verbose_name': 'instrument',
                'verbose_name_plural': 'instrumenter',
            },
        ),
        migrations.AddField(
            model_name='member',
            name='instrument',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='members', to='members.Instrument', verbose_name='instrument'),
        ),
        migrations.AddField(
            model_name='member',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
